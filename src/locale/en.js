const en_US = {
    // common
    close: 'Close',
    check: 'Check',
    // sidebar

    dashboard: 'Dashboard',
    cheques: 'Cheques',
    files: 'Files',
    peers: 'Peers',
    settings: 'Settings',
    version: 'Version',
    view_code: 'View the Code',
    report_bugs: 'Report Bugs',
    contact_us: 'Contact Us',
    heartbeats: 'Online Proof',

    // dashboard

    host_id: 'Host ID',
    host_version: 'Host Version',
    status: 'Status',
    online: 'Online',
    offline: 'Offline',
    network_unstable: 'Network Unstable',
    connected: 'Connected',
    uptime: 'Uptime',
    online_duration: 'Online Duration',
    host_score: 'Host Score',
    host_score_factor: 'Host Score Factors',
    weight: 'Weight',
    host_age: 'Host Age',
    download: 'Download',
    downloading: 'Downloading',
    upload: 'Upload',
    uploading: 'Uploading',
    last_updated: 'Last Updated',
    host_score_history: 'Host Score History',
    total_earnings: 'Total Earnings',
    cheque_earnings: 'Cheque Earnings',
    cheque_expense: 'Cheque Expense',
    airdrop: 'Airdrop',
    total_expense: 'TOTAL EXPENSE',
    cheque_expense_des: 'Only gas expense of online proof transactions are counted.',
    gas_fee: 'GAS FEE',
    chequebook: 'Vault',
    vault: 'Vault(s)',
    contracts: 'Contracts',
    cashed: 'Cashed',
    uncashed: 'Uncashed',
    earning_history: 'Earning History',
    address: 'Address',
    balance: 'Balance',
    withdraw: 'Withdraw',
    deposit: 'Deposit',
    uncashed_amount: 'Uncashed Amount',
    amount: 'Amount',
    storage: 'Storage',
    cash: 'Cash',
    price: 'Price',
    month: 'Month',
    bandwidth_over_time: 'Bandwidth',
    network_traffic: 'Network Traffic',
    incoming: 'Incoming',
    outgoing: 'Outgoing',
    last: 'Last',
    days: 'Days',
    receive: 'Receive',
    send: 'Send',
    in: 'In',
    out: 'Out',
    poor: 'Poor',
    general: 'Average',
    good: 'Good',
    excellent: 'Excellent',
    online_active: 'Activity',
    switch_old_version: 'Old version',
    switch_new_version: 'New version',
    cheque_earnings_des:
        'According to the current exchange rate, other currencies are converted into BTT. The value is for reference only. Click to view the details',
    cheque_earning_detail: 'Cheques Earning Details',
    checks_expense_details: 'Cheques Expense Details',
    vault_contract_balance: 'Vault Balance',
    vault_contract_address: 'Vault Contract Address',
    address_balance: 'Balance',

    // cheques

    earning: 'Earning',
    expense: 'Expense',
    received_cheques: 'Received Cheques',
    received_cheques_amount: 'Received Cheques Amount',
    cheque_earnings_history: 'Cheque Earnings',
    cheque_cashing: 'Cheque Cashing',
    cashing_history: 'Cashing History',
    cashing_status: 'Cashing Status',
    blockchain: 'Blockchain',
    sent_cheques: 'Sent Cheques',
    sent_cheques_amount: 'Sent Cheques Amount',
    cheque_expense_history: 'Cheque Expense',
    total_sent: 'Total Sent',
    cash_list: 'Cash List',
    cash_history: 'Cash History',
    cheque_cashing_list: 'Cashing List',
    cheque_cashing_history: 'Cashing History',
    cheque_detail: 'Cheque Detail',
    cashing: 'Cashing',
    est_fee: 'Estimated Transaction Fee',
    tx_hash: 'Txn Hash',
    date: 'Date',
    time: 'Time',
    expense_list: 'Expense List',
    recipient: 'Recipient',
    cheques_number: 'Cheques Number',
    currency_type: 'Token',
    cheques_amount: 'Cheques Amount',
    cheques_amount_tooltip:
        'The total amount is converted into BTT from other currencies at the current exchange rate, and the value is for reference only',

    // files

    import: 'Import',
    file: 'File',
    chunks: 'Chunks',
    file_name: 'File Name',
    folder: 'Folder',
    new_folder: 'New folder',
    folder_name: 'Folder Name',
    create: 'Create',
    import_from_btfs: 'Import from BTFS',
    from: 'From',
    name: 'Name',
    size: 'Size',
    total: 'Total',
    delete: 'Delete',
    items_selected: 'Items Selected',
    unselect_all: 'Unselect All',
    download_status: 'Download Status',
    upload_status: 'Upload Status',
    browse: 'Browse',
    occupied: 'Occupied',
    search_here: 'Go to directory by CID',
    search_go:'Go',

    // peers

    location: 'Location',
    latency: 'Latency',
    peer: 'Peer',
    connection: 'Connection',
    add_connection: 'Add Connection',

    // setting

    system_config: 'System Config',
    submit: 'Submit',
    endpoint: 'Endpoint',
    storage_path: 'Storage Path',
    change: 'Change',
    security: 'Security',
    reveal_key: 'Reveal Private Key',
    private_key: 'Private Key',
    advance_config: 'Advanced Settings',
    advance_config_tips:
        'Changes to the settings require the service to be restarted before they can take effect. Please do not change any item if you do not know what it is.',
    reset_default: 'Reset',
    view_config_file: 'Config File',
    enable_storage_host: 'Miner Mode',
    enable_storage_host_tips:
        'The node stores the data uploaded by users only when Storage Host Mode is on. This mode is turned on by default.',
    enable_report_online: 'Online Report',
    enable_report_online_tips:
        'Once it is turned on, a signature will be created every hour, and the data of all signatures will be reported to the contract.',
    enable_report_status_contract: 'Status Contract Report',
    enable_report_status_contract_tips: `Once it is turned on, the node's uptime will be reported to the Online Proof Contract via a transaction every day. `,
    reset_advance_config_title: 'Restore the default configuration',
    reset_advance_config_tips:
        'After restoring the default configuration, you need to restart the service to take effect',
    setting_breadcrumb: 'SETTINGS',
    setting_file_config_breadcrumb: 'View BTFS Configuration File',
    setting_file_config_breadcrumb_des: `BTFS's configuration file is a JSON file read by the BTFS daemon. `,
    rpc_address: 'RPC Address',
    rpc_set_btn_name: 'Set',
    copy_url: 'Copy URL with API parameter',
    copy_url_tips: `Copy the URL with the API endpoint's parameters. You may configure the API endpoint quickly by accessing the URL.`,

    // modal
    transfer: 'Transfer',
    exchange: 'Exchange',
    BTFS_10_withdraw: 'BTFS 1.0 Withdraw',
    withdraw10: 'Withdraw',
    '10_withdraw_description': 'The withdrawal will be sent to Nodeâ€™s corresponding TRON address.',
    node_tron_addr: 'Node TRON address',
    available: 'Available',
    BTFS_10_withdraw_limit: 'Per withdrawal limit',
    insert_cid: 'Insert an BTFS path (CID) to import. Examples:',
    insert_name: 'Insert the name of the folder you want to create.',
    chequebook_withdraw: 'Withdraw from Vault',
    amount_to_withdraw: 'Please enter the amount you would like to withdraw from vault',
    chequebook_deposit: 'Deposit into Vault',
    amount_to_deposit: 'Please enter the amount you would like to deposit into vault',
    transfer_confirmation: 'Transfer Confirmation',
    cancel: 'Cancel',
    confirm: 'Confirm',
    confirmation: 'Confirmation',
    max_amount: 'Max Amount',
    max_available_amount: 'Max Available Amount',
    address_to_connect: ' Please enter the peer address you want to connect.',
    cash_confirm: 'Cash Confirmation',
    next: 'Next',
    return: 'Return',
    receive_account: 'Receive Account',
    send_to: 'Send To',
    send_amount: 'Send Amount',
    enter_bttc_address: 'Please enter a valid BTTC address',
    key_warning_1: 'Private key controls all your assets',
    key_warning_2: 'Do Not show the private key to anybody',
    storage_path_confirmation: 'Storage Path Confirmation',
    storage_path_info: 'Are you sure you want to change BTFS storage to this path ?',

    //  warning

    no_preview: 'No Preview',
    node_not_connected: 'Looks like your node is not connected',
    node_connecting: 'Node connecting',
    still_not_working: ' Still not working? Drop us a message on the BTFS Discord',
    coming_soon: 'Coming Soon',
    cashing_list_tip: 'Cashable amount will be accumulated by vaults, please select the vaults to cash.',
    cashing_history_tip: 'Cashing History Tip',
    expense_list_tip: 'Sent amount will be accumulated by Vaults.',
    copied: 'Copied',
    no_data: 'No Data',
    setting_error: 'Setting failed, please check if you are using a valid API URL!',
    setting_success: 'Setting Successful !',
    change_success: 'Change Path Successful !',
    api_invalid: 'Invalid API URL Format !',
    api_not_set: 'API ENDPOINT not set !',
    withdraw_success: 'Withdraw Successful !',
    deposit_success: 'Deposit Successful !',
    transfer_success: 'Transfer Successful !',
    exchange_success: 'Exchange Successful !',
    import_success: 'Import Successful !',
    create_folder_success: 'Create Folder Successful !',
    delete_success: 'Delete Successful !',
    add_connection_success: 'Add Connection Successful !',
    import_fail: 'Import Failed !',
    create_folder_fail: 'Create Folder Failed !',
    delete_fail: 'Delete Failed !',
    add_connection_failed: 'Add Connection Failed !',
    host_warning: 'Host score valuing. This process takes up to 24 hours. Please stay online.',
    network_unstable_bttc: 'Can not connect to BTTC RPC.',
    network_unstable_btfs: 'Can not connect to BTFS Network.',
    check_network_request: 'Please check your network connection.',
    estimate_transition_fee_tooltip:
        'If the BTT balance is less than the estimated transaction fee, the transaction may not be sent successfully',
    copy_success: 'Copy Sucessful !',

    // heartBeats

    heart_contract: 'ONLINE PROOF CONTRACT',
    heart_contract_des:
        'The node will get online proof from the online signature service, and report it to the online proof contract. This contract is designed to store the latest online proof data for each node.',
    heart_transaction: 'ONLINE PROOF TRANSACTIONS',
    in_total: 'in total',
    gas_spend: 'Gas Spend',
    gas_spend_des: 'The Gas fee consumed by online proof transactions',
    transaction_list: 'ONLINE PROOF TRANSACTIONS',
    list_des:
        'The node proves its online status by periodically sending transactions to the online proof contract.',
    heart_to_scan: 'View the chart on BTFS scan >',
    heart_th_time: 'Time(UTC)',
    heart_th_txhash: 'TX hash',
    heart_th_from: 'From',
    heart_th_contract: 'Online Proof Contract',
    heart_th_nonce: 'Heartbeats Nonce',
    bttc_addr: 'Nodeâ€™s BTTC Address',
    heart_th_nonce_tips:
        'Heartbeat Nonce: A nonce used to prove the node is online. The nonce will increase by one as each hour passes. ',
    switch_to_v1: 'Switch to V1',
    switch_to_v2: 'Switch to V2',
    switch_v1_v2_tootip:
        'The V1 version of online proof proves the online status of the node by sending transactions to the contract, which is no longer used after BTFS 2.3',
    online_proof_data: 'Online Proof Data',
    online_proof_nonce: 'Current Nonce',
    online_proof_detail: 'Online Proof  Details',
    online_proof_detail_des:
        'The node proves the online status of the node by periodically sending status data to the online proof service',
    online_proof_link_to_scan: 'View and verify on BTFS Scan',
    online_proof_node_id: 'Node ID',
    online_proof_sign_time: 'Sign Time',
    online_proof_heart_beats: 'Heartbeats Nonce',
    online_proof_table_detail: 'Detail',
    online_proof_table_detail_last_signature: 'Last Singature',
    online_proof_table_detail_peer_id: 'PeerID',
    online_proof_table_detail_create_time: 'Create Time',
    online_proof_table_detail_version: 'Version',
    online_proof_table_detail_nonce: 'Heartbeats Nonce',
    online_proof_table_detail_bttc_address: 'BTTC Address',
    online_proof_table_detail_signed_time: 'Signed Time',

    native_api: 'BTFS Native API',
    file_breadcrumb: 'File',

    // S3 api
    s3_api: 'S3 API',
    s3_api_des_1: 'You can use',
    s3_api_des_2: 'AWS CLI',
    s3_api_des_3: `to interact with BTFS's S3-compatible API`,
    s3_api_config: 'S3 API Configuration',
    s3_api_config_tips: 'S3 API Config',
    s3_api_end_point: 'API End Point',
    s3_access_keys: 'S3 Access Keys',
    s3_access_key: 'Access Key',
    s3_access_keys_manager: 'Access Keys Management',
    s3_new_bucket: 'New Bucket',
    s3_bucket_name: 'Bucket Name',
    s3_acl: 'ACL',
    s3_size: 'Size',
    s3_modified: 'Modified',
    s3_created: 'Created',
    s3_delete_bucket: 'Delete Bucket',
    s3_bucket_name_rule_1: 'Bucket name must follow',
    s3_bucket_name_rule_2: 'S3 bucket naming rules.',
    s3_delete_bucket_des: 'Are you sure you want to delete the bucket? This operation is not reversible.',
    s3_reset_access_key: 'Reset Access Key',
    s3_reset_access_key_des: 'Are you sure you want to reset the secret of this Access Key?',
    s3_name: ' Name',
    s3_cid: 'CID',
    s3_gateway_url: 'BTFS Gateway URL',
    s3_new_folder: 'New folder',
    s3_upload: 'Upload',
    s3_add_folder: 'Add New Folder',
    s3_folder_name: 'Folder Name',
    s3_add_folder_rule_1: 'Object name must follow',
    s3_add_folder_rule_2: 'S3 object key naming rules.',
    s3_rename_file: 'Rename File',
    s3_rename: 'Rename',
    s3_manager: 'Management',
    s3_new_key: 'New key',
    s3_new_key_title: 'Generate New Access Key',
    s3_new_key_des: 'Generate a new BTFS S3 API keys',
    s3_key: 'Key',
    s3_secret: 'Secret',
    s3_created_at: 'Created at',
    s3_enable: 'Enable',
    s3_btn_add: 'Add',
    s3_access_key_enable_success: 'access key enable success',
    s3_access_key_disable_success: 'access key disable success',
    s3_access_key_reset_success: 'access key reset success',
    s3_access_key_delete_success: 'access key delete success',
    s3_new_access_key_success: 'new access key success',
    s3_rename_success: 'rename success',
    s3_rename_fail: 'rename fail',
    s3_btn_reset: 'reset',
    s3_btn_delete: 'delete',
    s3_new_folder_error_tips: 'Folder name does not conform to naming convention',
    s3_bucket_delete_success: 'delete success',
    s3_bucket_delete_fail: 'Bucket Deletion failed. Please delete all files and try again.',
    s3_new_bucket_success: 'create bucket name success',
    s3_new_bucket_error_tips: `The bucket name does not conform to the naming convention`,
    s3_new_bucket_already_exists_error: 'A bucket with the same name already exists',
    s3_new_bucket_invalid_key_error: 'Bucket creation failed. Please check access key settings.',
    s3_new_folder_already_exists_error: 'A folder with the same name already exists',

    //encrypt-decrypt
    encrypt_decrypt: 'Encryption/Decryption',
    encrypt_file: 'Encrypt file and upload',
    decrypt_file: 'Download file and decrypt',
    encrypt_upload_file: 'Encrypt and upload',
    encrypt_upload_file_desc:
        "Encrypt the original file using either a specified node's public key or a self-set key, and then upload it to the BTFS network",
    select_encrypt_file: 'Select file',
    select_encrypt_file_btn: 'Browse',
    cancel_encrypt_file_btn: 'Cancel',
    encrypt_file_btn: 'Encrypt and upload',
    encrypt_file_hostid_title: 'Specify other nodes to decrypt the file',
    encrypt_file_hostid_desc:
        "Enter any node ID to encrypt the file using that node's public key. If turned off, the file will be encrypted using this node's public key by default",
    decrypt_upload_file: 'Get and decrypt the file by CID',
    decrypt_upload_file_desc:
        "Retrieve the encrypted file from the BTFS network using the file CID and decrypt it with the current node's private key or a specified key",
    dncrypt_file_cid: 'File CID',
    decrypt_file_btn: 'Get File and Decrypt',
    encrypt_import_success: 'Encrypt import successful',
    encrypt_file_cid: 'Encrypted file CID',
    encrypt_file_cid_title: 'Encrypted file uploaded successfully',
    encrypt_file_cid_desc:
        'Please save the CID of the encrypted file properly so that it can be retrieved from the BTFS network again',
    encrypt_file_cid_copy: 'Copy file CID',
    encrypt_file_select_validate: 'Please select the file',
    encrypt_file_hostId_validate: 'HostID format error',
    encrypt_file_hostId_null_validate: 'Please enter HostID',
    decrypt_file_cid_validate: 'File CID format error',
    decrypt_file_cid_null_validate: 'Please enter the file CID',
    decrypt_input_cid_placeholder: 'Input the file CID',
    decrypt_download_success: 'File obtained successfully',

    //v3.0
    encrypt_file_password: "Set the Key",
    "encrypt_file_password_desc": "Anyone with this key can decrypt the file. BTFS will not save this key. If the key is lost, the file cannot be recovered. Please keep the key safe.",
    "random_key": "Randomly Generate",
    "set_encrypt_key_placeholder": "Set the file encryption and decryption key",
    "validate_encryptkey_null": "Please enter the encryption key",
    "validate_encryptkey": "Please enter an encryption key consisting of 6-20 characters, including letters and numbers",
    "encrypt_file_with_host": "Encrypt with node public key",
    "encrypt_file_with_password": "Encrypt file with a key",
    "encrypt_file_with_cur_host": "Encrypt file with this node's public key",
    "encrypt_file_with_cur_host_desc": "Use this node's public key to encrypt the selected file. This node can decrypt the file.",
    "encrypt_file_with_other_host": "Encrypt file with another node's public key",
    "encrypt_file_with_other_host_desc": "Use the specified node's public key to encrypt the file. That node can decrypt the file.",

    "decrypt_file_with_host": "Decrypt with node private key",
    "decrypt_file_with_password": "Decrypt file with a key",
    "decrypt_file_password": "File decryption key",
    "validate_decryptkey_null": "Please enter the file decryption key",
    "validate_decryptkey": "Please enter a decryption key consisting of 6-20 characters, including letters and numbers",
    "set_decrypt_key_placeholder": "Please enter the file decryption key",
    "dncrypt_file_hostid": "Host ID where the file is located (optional)",
    "dncrypt_file_hostid_desc": "Providing the Host ID where the file is located can greatly speed up file retrieval",
    "decrypt_file_hostId_validate": "Please enter a valid host ID",




        //v3.1
        dncrypt_file_time_out: "File acquisition timeout",
        dncrypt_file_time_out_desc: "Set a timeout period to avoid long waits. A longer timeout may increase the success rate of file acquisition",
        seconds_30: "30 seconds",
        minutes_1: "1 minute",
        minutes_3: "3 minutes",
        minutes_5: "5 minutes",
        minutes_10: "10 minutes",

        file_cid: "CID",
        file_create: "Created",
        file_isencrypted: "Is Encrypted",
        file_encrypted: "Encrypted",

        login: "Login",
        login_endpoint_desc: "Enter a local or remote API Endpoint to continue",
        set_login_password: "Set login password",
        set_login_password_desc: "When logging in to the node for the first time, please set a login password to protect the nodeâ€™s data and private key",
        reset_login_password: "Reset login password",
        reset_login_password_desc: "BTFS does not save the password. If you forget your login password, you can use the nodeâ€™s private key to reset it",
        enter_private_key: "Please enter the node private key",
        login_password: "login password",
        lost_password: "Forgot password?",
        enter_password: "Set login password",
        enter_password_desc: "A combination of letters and numbers with more than 8 characters",
        re_enter_password: "Re-enter password",
        login_title: "Welcome back",
        login_lock_message: "Too many failed attempts. The operation has been locked. Please try again in 10 minutes",

        reset_password_private_key_placeholder: "Please enter in hexadecimal private key format",
        re_enter_password_placeholder: "Re-enter password",
        enter_password_placeholder: "Please enter password",

        check_private_key: "View private key",
        check_private_key_desc: "The private key provides full access to your node and assets. Please ensure that the private key is not leaked to others.",
        check_private_key_input: "Enter login password to continue.",
        check_private_key_input_placeholder: "Please enter password.",

        setting_login_password: "Login password",
        setting_login_password_btn: "Change password",
        change_password_modal: "Change login password",
        enter_old_password: "Enter old password",
        enter_old_password_placeholder: "Please enter old password",
        change_password_success: "Password changed successfully",
        change_password_fail: "Password change failed",
        password_error: "Password error",
        same_as_old_password: "The new password cannot be the same as the old password.",
        // Validate

        password_validate_required: "Please enter password",
        password_validate_pattern: "At least 8 characters, including at least 1 lowercase letter and 1 number",
        password_re_enter_validate_pattern: "Passwords do not match",
        private_key_validate_required: "Please enter private key",
        private_key_validate_pattern: "Please enter hexadecimal private key",

        logout: "Logout",


        reset_password_success:'Password has been successfully set',
        set_password_success:'Password has been successfully set',
        lougout_comfirm_modal_title:'Logout',
        lougout_comfirm_modal_desc:'Are you sure you want to log out of the current node?',
        enable_token_auth_msg:'The current node has the EnableTokenAuth option disabled. To ensure data security, please upgrade to the latest version and enable this option in the configuration before continuing to use the Dashboard.',

        read_doc:'Read the Doc',
        login_error:'Login failed, please check the network',
        login_password_error:'Wrong login password',

        upload_success:'Upload Successfully',
        download_success:'Download Successfully',
        upload_fail:'Upload Failed',
        download_fail:'Download Failed',

        //v1.9
        file_black_list: 'File Blacklist',
        file_blacklist_cancel: 'Cancel',
        file_blacklist_close: 'Close',
        file_blacklist_save: 'Save',
        file_blacklist_edit: 'Edit',
        day: 'Day',
        add_file_blacklist_success: 'Added Successfully',
        validate_file_blacklist_cid1: 'Chinese characters are not allowed. Please use commas (,) to separate entries.',
        validate_file_blacklist_cid2: 'Please enter a valid CID.',
        file_blacklist_title: 'Blacklist Content',
        file_blacklist_desc: 'Add the CIDs of the content to be blacklisted here, one per line.',
        file_blacklist_desc2: 'Content listed in the blacklist will be inaccessible via the BTFSGateway (default port 8080).',
        file_blacklist_cid_placeholder:'No file blacklist has been added yet.',
        lock_success:'Account Locked Successfully',

        //v4.0.1

        "added_files": "Added Files",
        "auto_renew_files": "Uploaded Files",
        "auto_renew_file_cid": "File CID",
        "auto_renew_file_filesize": "File Size",
        "auto_renew_file_uploaded_time": "Upload Time",
        "auto_renew_file_sp": "Storage Provider",
        "auto_renew_status": "Auto Renew Status",
        "auto_renew_file_more_info": "More Info",
        "auto_renew_operation": "Actions",
        "disable_auto_renew": "Disable Auto Renew",
        "enable_auto_renew": "Enable Auto Renew",
        "disable_auto_renew_desc": "After disabling, files will no longer renew automatically",
        "enable_auto_renew_desc": "After enabling, files will renew automatically",
        "enable": "Enable",
        "disable": "Disable",
        "view": "View",
        "renew_file_info": "File Info",
        "renew_file_info_desc": "File details",
        "On": "On",
        "Off": "Off",
        "all": "All",
        "auto_renew_on": "Auto Renew On",
        "auto_renew_off": "Auto Renew Off",

        "proxy": "Proxy Mode",
        "enable_proxy_mode": "Enable Proxy Mode",
        "proxy_service_price": "Proxy Service Price",
        "unit_day": "Day",
        "proxy_upload": "Proxy Upload",
        "user_balance": "User Balance",
        "start_proxy_service": "Start Proxy Service",
        "start_proxy_service_desc": "Once enabled, this node can handle other users' upload requests in proxy mode",
        "start_service_confirm": "Enable",
        "close_proxy_service": "Stop Proxy Service",
        "close_proxy_service_desc": "Once disabled, this node will no longer provide proxy upload services",
        "close_service_confirm": "Disable",
        "change_price_modal": "Change Price",
        "change_price_modal_desc": "You can customize the proxy upload service price. It is recommended to set slightly higher than the BTFS network storage price",

        "enter_new_price_placeholder": "Enter price",
        "new_price_validate_pattern": "Invalid price format",
        "price_validate_min": "Price cannot be lower than BTFS network storage price",
        "price_validate_max": "Price is set too high",
        "price_validate_integer": "Price must be an integer",
        "default_price": "Use Default Price",

        "proxy_upload_table_address": "Address",
        "proxy_upload_table_cid": "File CID",
        "proxy_upload_table_filesize": "File Size",
        "proxy_upload_table_fees": "Fees",
        "proxy_upload_table_unitprice": "Unit Price",
        "proxy_upload_table_view": "Details",
        "proxy_file_info": "Proxy Upload Info",
        "proxy_file_info_desc": "Details of this proxy upload record",

        "user_balance_table_address": "Address",
        "user_balance_table_balance": "Balance",
        "user_balance_table_deposit_history": "Deposit Records",
        "user_balance_table_from": "From",
        "user_balance_table_to": "To",
        "user_balance_table_value": "Amount",
        "user_balance_table_hash": "Hash",
        "user_pay_history": "Deposit History",
        "user_pay_history_desc": "All deposit history for this user",

        set_renew_on_fail: 'Failed to enable auto renew',
        set_renew_off_fail: 'Failed to disable auto renew',
        set_renew_on_success: 'Auto renew enabled successfully',
        set_renew_off_success: 'Auto renew disabled successfully',

        set_proxy_on_success: 'Proxy service enabled successfully',
        set_proxy_on_fail: 'Failed to enable proxy service',
        set_proxy_off_success: 'Proxy service disabled successfully',
        set_proxy_off_fail: 'Failed to disable proxy service',

        change_price_success: 'Proxy service price updated successfully',
        change_price_fail: 'Failed to update proxy service price',


        user_balance_table_pay_time:'Pay Time',
        proxy_upload_table_created_time:'Create Time',
        enable_proxy_mode_desc:"Once enabled, this node will handle other users' upload requests in proxy mode."



};

export default en_US;
